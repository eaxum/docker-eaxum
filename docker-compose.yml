version: '3.5'

x-base: &base
    restart: always
    networks:
        - internal

x-env: &env
    env_file:
        - ${ENV_FILE:-./env}

x-backend-volumes: &backend_volumes
    volumes:
        - 'previews:${PREVIEW_FOLDER:?}'
        - 'tmp:${TMP_DIR:-/tmp/zou}'
        - /home/asuna/aderemi-adesada/genesys_kitsu_addon/event_handlers/:/usr/local/lib/python3.7/site-packages/zou/app/services/genesys_addon/event_handlers
        # - genesys_addon:/usr/local/lib/python3.7/site-packages/zou/app/services/genesys_addon/event_handlers

services:
    kitsu:
        <<: [*base, *env]
        container_name: ${COMPOSE_PROJECT_NAME:?}-kitsu
        image: eaxum/kitsu:${KITSU_VERSION:-latest}
        depends_on:
            - zou-app
            - zou-event
            - zou-jobs
        # volumes:
        #     - kitsu:/opt/kitsu/dist
        ports:
            - '${PORT:-83}:80'

    zou-app:
        <<: [*base, *env, *backend_volumes]
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-app
        image: eaxum/zou:${ZOU_VERSION:-latest}
        depends_on:
          - db
        command: "gunicorn --error-logfile - --access-logfile - -w 3 -k gevent -b :5000 zou.app:app"

    zou-event:
        <<: [*base, *env, *backend_volumes]
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-event
        image: eaxum/zou:${ZOU_VERSION:-latest}
        depends_on:
          - redis
        command: "gunicorn --error-logfile - --access-logfile - -w 3 -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -b :5001 zou.event_stream:app"

    zou-jobs:
        <<: [*base, *env, *backend_volumes]
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-jobs
        image: eaxum/zou:${ZOU_VERSION:-latest}
        depends_on:
            - redis
        command: "rq worker -c zou.job_settings"

    db:
        # ports:
        #     - '5432:5432'
        <<: *base
        container_name: ${COMPOSE_PROJECT_NAME:?}-db-${DB_VERSION:?}
        image: postgres:${DB_VERSION:?}-alpine
        volumes:
            - 'db:/var/lib/postgresql/data'
            - ./db/pg_ctl.conf:/etc/postgresql/${DB_VERSION:?}/main/pg_ctl.conf:ro
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD:?}
        ports: 
            - "8007:5432"

    redis:
        <<: *base
        container_name: ${COMPOSE_PROJECT_NAME:?}-redis
        image: redis:alpine
        volumes:
            - 'redis:/data'
    
    openldap:
        <<: *base
        image: osixia/openldap:1.4.0
        restart: always
        container_name: ${COMPOSE_PROJECT_NAME:?}-ldap
        # hostname: eaxum-ldap
        environment:
            - LDAP_ORGANISATION=eaxum
            - LDAP_DOMAIN=eaxum.com
            - LDAP_ADMIN_USERNAME=admin
            - LDAP_ADMIN_PASSWORD=admin
            - LDAP_CONFIG_PASSWORD=config_pass
            - LDAP_BASE_DN=dc=eaxum,dc=com
            - LDAP_READONLY_USER=false
            - LDAP_TLS=false
            - LDAP_TLS_VERIFY_CLIENT=never
            - LDAP_RFC2307BIS_SCHEMA=true

            - LDAP_SYNCREPL="rid=002 provider=ldap://ldap1.example.com bindmethod=simple binddn='cn=admin,dc=example,dc=com' credentials=admin searchbase='dc=example,dc=com' schemachecking=off type=refreshAndPersist retry='5 5 300 5' interval=00:00:05:00"
            - LDAP_SYNCREPL_READONLY_USER=syncuser
            - LDAP_SYNCREPL_READONLY_USER_PASSWORD=syncpassword
        volumes:
            - ldap_data_base:/var/lib/ldap
            - ldap_config:/etc/ldap/slapd.d
    
    phpldapadmin:
        <<: [*base, *env]
        image: osixia/phpldapadmin:0.9.0
        container_name: ${COMPOSE_PROJECT_NAME:?}-phpldapadmin
        # hostname: phpldapadmin
        ports: 
            - "8001:80"
        depends_on:
            - openldap

    ldap-manager:
        <<: *base
        image: wheelybird/ldap-user-manager:v1.5
        container_name: ${COMPOSE_PROJECT_NAME:?}-ldap-manager
        # hostname: ldap-manager
        ports: 
            - "8002:80"
        environment: 
            - SERVER_HOSTNAME=eaxum-ldap
            - LDAP_URI=ldap://eaxum-ldap
            - LDAP_BASE_DN=dc=eaxum,dc=com
            - LDAP_ADMINS_GROUP=admins
            - LDAP_ADMIN_BIND_DN=cn=admin,dc=eaxum,dc=com
            - LDAP_ADMIN_BIND_PWD=admin
            - LDAP_IGNORE_CERT_ERRORS=true
            - LDAP_USER_OU=users
            - DEFAULT_USER_GROUP=users
            - NO_HTTPS=TRUE
        depends_on:
            - openldap
   
    nginx:
        <<: *base
        image: nginx:1.19.7
        container_name: ${COMPOSE_PROJECT_NAME:?}-nginx
        # hostname: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - ./nginx-selfsigned.key:/etc/nginx/certs/nginx-selfsigned.key
            - ./nginx-selfsigned.crt:/etc/nginx/certs/nginx-selfsigned.crt
        
volumes:
    # kitsu:
    #     name: kitsu
    db:
        name: ${COMPOSE_PROJECT_NAME:?}-db-${DB_VERSION:?}
    ldap_data_base:
        name: ${COMPOSE_PROJECT_NAME}-ldap_data_base
    ldap_config:
        name: ${COMPOSE_PROJECT_NAME}-ldap_config
    redis:
        name: ${COMPOSE_PROJECT_NAME:?}-redis
    previews:
        name: ${COMPOSE_PROJECT_NAME:?}-previews
    tmp:
        name: ${COMPOSE_PROJECT_NAME:?}-tmp
    # genesys_addon:
    #     name: genesys_addon
    #     driver: local
    #     driver_opts:
    #       type: 'none'
    #       o: 'bind'
    #       device: /home/asuna/aderemi-adesada/genesys_kitsu_addon/event_handlers/
        

networks:
    internal:
        name: ${COMPOSE_PROJECT_NAME:?}-internal
